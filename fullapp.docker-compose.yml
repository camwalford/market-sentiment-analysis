version: '3.8'  # Using latest stable version for better feature support

services:
  mysql:
    image: mysql:8.0  # Specify version for stability
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?Must set MYSQL_ROOT_PASSWORD}  # Fail if not set
      MYSQL_DATABASE: ${MYSQL_DATABASE:-marketdb}
      MYSQL_USER: ${MYSQL_USER:-admin}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:?Must set MYSQL_PASSWORD}
    ports:
      - '${MYSQL_PORT}'
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:  # Add healthcheck for dependent services
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend-api-service:
    build:
      context: backend-api-service
      dockerfile: Dockerfile
      args:
        JAVA_VERSION: ${JAVA_VERSION:-21}
        PORT: ${BACKEND_API_SERVICE_PORT:-8080}  # Add port build argument
    depends_on:
      mysql:
        condition: service_healthy  # Wait for MySQL to be ready
    environment:
      PORT: ${BACKEND_API_SERVICE_PORT:-8080}
      JAVA_VERSION: ${JAVA_VERSION:-21}
      MYSQL_HOST: mysql
      MYSQL_DATABASE: ${MYSQL_DATABASE:-marketdb}
      MYSQL_USER: ${MYSQL_USER:-admin}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      JWT_KEY: ${JWT_KEY:?Must set JWT_KEY}
      JWT_ACCESS_TOKEN_EXPIRATION: ${JWT_ACCESS_TOKEN_EXPIRATION:-3600000}
      JWT_REFRESH_TOKEN_EXPIRATION: ${JWT_REFRESH_TOKEN_EXPIRATION:-86400000}
      FINNHUB_INGESTION_SERVICE_URL: http://finnhub-ingestion-service:${FINNHUB_INGESTION_SERVICE_PORT}
      BERT_SENTIMENT_ANALYSIS_SERVICE_URL: http://bert-sentiment-analysis-service:${BERT_SENTIMENT_ANALYSIS_SERVICE_PORT}
      WEB_DASHBOARD_SERVICE_URL: ${WEB_DASHBOARD_SERVICE_URL}:${WEB_DASHBOARD_SERVICE_PORT}
    ports:
      - '${BACKEND_API_SERVICE_PORT:-8080}:${BACKEND_API_SERVICE_PORT:-8080}'

  finnhub-ingestion-service:
    build:
      context: finnhub-ingestion-service
      dockerfile: Dockerfile
      args:
        JAVA_VERSION: ${JAVA_VERSION:-21}
        PORT: ${FINNHUB_INGESTION_SERVICE_PORT:-8081}  # Add port build argument
    environment:
      PORT: ${FINNHUB_INGESTION_SERVICE_PORT:-8081}
      JAVA_VERSION: ${JAVA_VERSION:-21}
      FINNHUB_API_KEY: ${FINNHUB_API_KEY:?Must set FINNHUB_API_KEY}
    ports:
      - '${FINNHUB_INGESTION_SERVICE_PORT:-8081}:${FINNHUB_INGESTION_SERVICE_PORT:-8081}'

  bert-sentiment-analysis-service:
    build:
      context: BERT-sentiment-analysis-service
      dockerfile: Dockerfile
      args:
        PORT: ${BERT_SENTIMENT_ANALYSIS_SERVICE_PORT:-8082}  # Add port build argument
    environment:
      PORT: ${BERT_SENTIMENT_ANALYSIS_SERVICE_PORT:-8082}
    ports:
      - '${BERT_SENTIMENT_ANALYSIS_SERVICE_PORT:-8082}:${BERT_SENTIMENT_ANALYSIS_SERVICE_PORT:-8082}'

  web-dashboard-service:
    build:
      context: web-dashboard-service
      dockerfile: Dockerfile
      args: # Pass the api url as a build argument because node.js can't access container environment variables it seems
        REACT_APP_API_URL: '${BACKEND_API_SERVICE_URL}:${BACKEND_API_SERVICE_PORT}/api'
    environment:
      PORT: ${WEB_DASHBOARD_SERVICE_PORT:-3000}
    ports:
      - '${WEB_DASHBOARD_SERVICE_PORT:-3000}:80'
    depends_on:
      - backend-api-service

volumes:
  mysql-data:
    name: mysql-data  # Explicitly name the volume

networks:
  default:
    name: sentiment-analysis-network  # Explicitly name the network
