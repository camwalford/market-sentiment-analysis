version: '3.8'  # Using latest stable version for better feature support

services:
  mysql:
    image: mysql:8.0  # Specify version for stability
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?Must set MYSQL_ROOT_PASSWORD}  # Fail if not set
      MYSQL_DATABASE: ${MYSQL_DATABASE:-marketdb}
      MYSQL_USER: ${MYSQL_USER:-admin}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:?Must set MYSQL_PASSWORD}
    ports:
      - '3307:3306'
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:  # Add healthcheck for dependent services
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend-api-service:
    build:
      context: backend-api-service
      dockerfile: Dockerfile
      args:
        JAVA_VERSION: ${JAVA_VERSION:-21}
    depends_on:
      mysql:
        condition: service_healthy  # Wait for MySQL to be ready
    environment:
      MYSQL_HOST: mysql
      MYSQL_DATABASE: ${MYSQL_DATABASE:-marketdb}
      MYSQL_USER: ${MYSQL_USER:-admin}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      JWT_KEY: ${JWT_KEY:?Must set JWT_KEY}
      JWT_ACCESS_TOKEN_EXPIRATION: ${JWT_ACCESS_TOKEN_EXPIRATION:-3600000}
      JWT_REFRESH_TOKEN_EXPIRATION: ${JWT_REFRESH_TOKEN_EXPIRATION:-86400000}
      FINNHUB_INGESTION_SERVICE_URL: http://finnhub-ingestion-service:${FINNHUB_INGESTION_SERVICE_PORT:-8081}
    ports:
      - '8080:8080'
#    restart: unless-stopped

  finnhub-ingestion-service:
    build:
      context: finnhub-ingestion-service
      dockerfile: Dockerfile
      args:
        JAVA_VERSION: ${JAVA_VERSION:-21}
    environment:
      FINNHUB_API_KEY: ${FINNHUB_API_KEY:?Must set FINNHUB_API_KEY}
    ports:
      - '8081:8081'
#    restart: unless-stopped

  bert-sentiment-analysis-service:  # Changed to lowercase for consistency
    build:
      context: BERT-sentiment-analysis-service
      dockerfile: Dockerfile
    ports:
      - '8082:8082'
#    restart: unless-stopped

  web-dashboard-service:
    build:
      context: web-dashboard-service
      dockerfile: Dockerfile
    environment:
        API_URL: http://backend-api-service:${BACKEND_API_SERVICE_PORT:-8080}/api
    ports:
      - '3000:80'
    depends_on:
      - backend-api-service
#    restart: unless-stopped

volumes:
  mysql-data:
    name: mysql-data  # Explicitly name the volume

networks:
  default:
    name: sentiment-analysis-network  # Explicitly name the network